# Azure DevOps pipeline template for validating & 'building' a Terraform module.

parameters:
  environment: dev
  environmentDisplayName: Development
  buildName: 
  workingDirectory: 
  deploymentName: 
  terraformVersion: '1.0.0'
  dependsOn: []

stages:
- stage: ${{ parameters.deploymentName }}
  displayName: Validate ${{ parameters.buildname }}-$(Build.BuildNumber)
  dependsOn: ${{ parameters.dependsOn  }}
  jobs:
    - job: Validate
      timeoutInMinutes: 60
      continueOnError: false
      steps:
      - task: InstallSSHKey@0
        inputs:
          knownHostsEntry: ${{ parameters.knownHosts }}
          sshPublicKey: ${{ parameters.sshPublicKey }}
          sshPassphrase: ${{ parameters.sshPassphrase }}
          sshKeySecureFile: ${{ parameters.sshSecureFile }}
      

      - task: TerraformInstaller@0
        displayName: 'install Terraform'
        inputs:
          terraformVersion: ${{ parameters.terraformVersion }}

  
      - bash: |
          curl --location https://github.com/accurics/terrascan/releases/download/v1.9.0/terrascan_1.9.0_Linux_x86_64.tar.gz --output terrascan.tar.gz
          tar xzf terrascan.tar.gz
          sudo install terrascan /usr/local/bin
          terrascan version
        displayName:      'Install Terrascan'
        workingDirectory: ${{ parameters.workingDirectory }}
      

      - bash: |
          terrascan scan -v
          scan = terrascan scan -v
          echo "##vso[task.setvariable variable=Terrascan_output;]$scan"
        displayName:     'Run security scan'
        workingDirectory: ${{ parameters.workingDirectory }}
      

      - bash: |
          terraform fmt
          terraform init -backend=false
          terraform validate
        displayName:     'Terraform Validate'
        workingDirectory: ${{ parameters.workingDirectory }}
